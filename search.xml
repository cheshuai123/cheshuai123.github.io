<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SQL入门50题]]></title>
    <url>%2Fhm773%2F8d5a8d19.html</url>
    <content type="text"><![CDATA[作为一个学习数据库的新手，SQL语言的练习是免不了的。基础入门50题练起来啊！题目的来源是CSDN的经典SQL50题，做完这些sql就入门了~,虽然可以搜到好多同样的题目，但是各自创建数据表的值不一样，我就选了这个数据量相对较多的。（而且人家标了原创了啊哈哈👍） 数据理解与创建题目所使用的数据结构基本一样的，都为学生表、课程表、教师表和成绩表。记录不同做题得出的结果也不同，该版本是有13条学生记录的版本，具体记录如下表： 学生表Student课程表Course教师表Teacher成绩表SC 学生编号SId 学生姓名Sname 出生年月Sage 学生性别Ssex 01 赵雷 1990-01-01 00:00:00 男 02 钱电 1990-12-21 00:00:00 男 03 孙风 1990-12-20 00:00:00 男 04 李云 1990-12-06 00:00:00 男 05 周梅 1991-12-01 00:00:00 女 06 吴兰 1992-01-01 00:00:00 女 07 郑竹 1989-01-01 00:00:00 女 09 张三 2017-12-20 00:00:00 女 10 李四 2017-12-25 00:00:00 女 11 李四 2012-06-06 00:00:00 女 12 赵六 2013-06-13 00:00:00 女 13 孙七 2014-06-01 00:00:00 女 课程编号CId 课程名称Cname 教师编号TId 01 语文 02 02 数学 01 03 英语 03 教师编号TId 教师姓名Tname 01 张三 02 李四 03 王五 学生编号SId 课程名称CId 成绩score 01 01 80.0 01 02 90.0 01 03 99.0 02 01 70.0 02 02 60.0 02 03 80.0 03 01 80.0 03 02 80.0 03 03 80.0 04 01 50.0 04 02 30.0 04 03 20.0 05 01 76.0 05 02 87.0 06 01 31.0 06 03 34.0 07 02 89.0 07 03 98.0 理解了大概的数据结构之后，可以开始创建数据了。以下代码无特别声明，均是在MySQL环境下运行的。 创建学生表Student12345678910111213create table Student(SId varchar(10),Sname varchar(10),Sage datetime,Ssex varchar(10));insert into Student values('01' , '赵雷' , '1990-01-01' , '男');insert into Student values('02' , '钱电' , '1990-12-21' , '男');insert into Student values('03' , '孙风' , '1990-12-20' , '男');insert into Student values('04' , '李云' , '1990-12-06' , '男');insert into Student values('05' , '周梅' , '1991-12-01' , '女');insert into Student values('06' , '吴兰' , '1992-01-01' , '女');insert into Student values('07' , '郑竹' , '1989-01-01' , '女');insert into Student values('09' , '张三' , '2017-12-20' , '女');insert into Student values('10' , '李四' , '2017-12-25' , '女');insert into Student values('11' , '李四' , '2012-06-06' , '女');insert into Student values('12' , '赵六' , '2013-06-13' , '女');insert into Student values('13' , '孙七' , '2014-06-01' , '女'); 创建课程表Course1234create table Course(CId varchar(10),Cname nvarchar(10),TId varchar(10));insert into Course values('01' , '语文' , '02');insert into Course values('02' , '数学' , '01');insert into Course values('03' , '英语' , '03'); 创建教师表Teacher1234create table Teacher(TId varchar(10),Tname varchar(10));insert into Teacher values('01' , '张三');insert into Teacher values('02' , '李四');insert into Teacher values('03' , '王五'); 创建成绩表SC12345678910111213141516171819create table SC(SId varchar(10),CId varchar(10),score decimal(18,1));insert into SC values('01' , '01' , 80);insert into SC values('01' , '02' , 90);insert into SC values('01' , '03' , 99);insert into SC values('02' , '01' , 70);insert into SC values('02' , '02' , 60);insert into SC values('02' , '03' , 80);insert into SC values('03' , '01' , 80);insert into SC values('03' , '02' , 80);insert into SC values('03' , '03' , 80);insert into SC values('04' , '01' , 50);insert into SC values('04' , '02' , 30);insert into SC values('04' , '03' , 20);insert into SC values('05' , '01' , 76);insert into SC values('05' , '02' , 87);insert into SC values('06' , '01' , 31);insert into SC values('06' , '03' , 34);insert into SC values('07' , '02' , 89);insert into SC values('07' , '03' , 98); 这样一来准备工作就完成了，接下来就是做题了。 题目练习查询”01”课程比”02”课程成绩高的学生的信息及课程分数结果: SId Sname Sag Ssex score1 score2 02 钱电 1990-12-21 00:00:00 男 70.0 60.0 04 李云 1990-12-06 00:00:00 男 50.0 30.0 执行代码:123456789101112SELECT -- 选取需要字段 student.*, s1.score AS score1, s2.score AS score2 FROM -- 来自于联表中 (student JOIN sc s1 ON student.SId = s1.SId AND s1.cid = '01' JOIN sc s2 ON student.SId = s2.SId AND s2.cid = '02') WHERE -- 筛选需要的 s1.score &gt; s2.score; 查询同时存在” 01 “课程和” 02 “课程的情况结果: SId Sname Sage Ssex CId01 CId02 01 赵雷 1990-01-01 00:00:00 男 01 02 02 钱电 1990-12-21 00:00:00 男 01 02 03 孙风 1990-12-20 00:00:00 男 01 02 04 李云 1990-12-06 00:00:00 男 01 02 05 周梅 1991-12-01 00:00:00 女 01 02 执行代码:123456SELECT student.*, s1.CId AS CId01, s2.CId AS CId02 -- 选取需要字段FROM (student -- 来自于联表 JOIN sc s1 ON student.SId = s1.SId AND s1.CId = '01' -- 使用and筛选 JOIN sc s2 ON student.SId = s2.SId AND s2.CId = '02'); 查询存在”01”课程但可能不存在”02”课程的情况(不存在时显示为 null )结果: SId Sname Sage Ssex CId01 CId02 01 赵雷 1990-01-01 00:00:00 男 01 02 02 钱电 1990-12-21 00:00:00 男 01 02 03 孙风 1990-12-20 00:00:00 男 01 02 04 李云 1990-12-06 00:00:00 男 01 02 05 周梅 1991-12-01 00:00:00 女 01 02 06 吴兰 1992-01-01 00:00:00 女 01 null 12 赵六 2013-06-13 00:00:00 女 01 null 执行代码:123456SELECT student.*, s1.CId AS CId01, s2.CId AS CId02 -- 选取需要字段FROM (student -- 构建联表 JOIN sc s1 ON student.SId = s1.SId AND s1.CId = '01' -- 使用and筛选 LEFT JOIN sc s2 ON student.SId = s2.SId AND s2.CId = '02'); 查询不存在”01”课程但存在”02“课程的情况结果: SId Sname Sage Ssex 07 郑竹 1989-01-01 00:00:00 女 执行代码:123456SELECT student.*FROM sc JOIN student ON sc.SId = student.SIdWHERE sc.SId NOT IN (SELECT sc.SId FROM sc WHERE sc.CId='01')AND sc.CId='02'; 查询平均成绩大于等于 60 分的同学的学生编号和学生姓名和平均成绩–未完待更~–]]></content>
      <categories>
        <category>DB&amp;DW</category>
      </categories>
      <tags>
        <tag>SQL</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[专利数据爬取（博客测试）]]></title>
    <url>%2Fhm773%2F27633c18.html</url>
    <content type="text"><![CDATA[模块加载与登录检索 1234567import csvimport timeimport pandas as pdfrom selenium import webdriverfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as EC 1234567891011121314151617181920212223242526272829303132#登陆验证driver = webdriver.Chrome()driver.get( "http://www.pss-system.gov.cn/sipopublicsearch/portal/uilogin-forwardLogin.shtml")locator = (By.LINK_TEXT, '登录')try: WebDriverWait(driver, 20, 0.5).until( EC.presence_of_element_located(locator)) name = driver.find_element_by_xpath('//input[@name="j_username"]') name.send_keys("hm773") password = driver.find_element_by_xpath('//input[@id="j_password_show"]') password.send_keys('1234567890qaz') captcha = driver.find_element_by_xpath( '//input[@name="j_validation_code"]') captcha.send_keys(input("输入验证码："))finally: driver.find_element_by_xpath('//a[@class="btn btn-login"]').click()time.sleep(2)print('验证通过，刷新页面中。。。')driver.get( 'http://www.pss-system.gov.cn/sipopublicsearch/patentsearch/tableSearch-showTableSearchIndex.shtml')time.sleep(2)#输入检索要求name = driver.find_element_by_xpath('//input[@indexcnname="IPC分类号"]')name.send_keys(input("输入检索分类号，如：A23"))summary = driver.find_element_by_xpath('//input[@indexcnname="摘要"]')summary.send_keys(input("输入检索摘要,如：药食"))driver.find_element_by_xpath('//a[@class="btn btn-search"]').click()print("请等待数据加载完成，请勿关闭打开的页面。")print("如需对搜索结果过滤请在打开的页面设定过滤条件进行过滤，不需过滤请运行下一条命令。") 123456输入验证码：93验证通过，刷新页面中。。。输入检索分类号，如：A23A23输入检索摘要,如：药食药食请等待数据加载完成，请勿关闭打开的页面。如需对搜索结果过滤请在打开的页面设定过滤条件进行过滤，不需过滤请运行下一条命令。 详览页面爬取（分步操作）刷新列表内容123456789101112131415161718#切换浏览器状态（爬取一次后列表信息会留存，需通过切换状态刷新）del itemwindows = driver.window_handlesdriver.switch_to.window(windows[0])status = driver.find_element_by_xpath('//a[@mode="SEARCH_MODE"]')select_status = status.get_attribute('class')if 'select' in select_status: driver.find_element_by_xpath('//a[@mode="TABLE_MODE"]').click() time.sleep(2) item = driver.find_elements_by_xpath('//a[@title="详览"]') print("列表式")else: driver.find_element_by_xpath('//a[@mode="SEARCH_MODE"]').click() time.sleep(2) item = driver.find_elements_by_xpath('//a[@role="detail"]') print('搜索式')#获取结果列表print(len(item)) 打开详览页面获取信息（报错重新run步骤1）123456789101112131415161718192021222324252627282930313233343536373839404142Row1 = []Row2 = []for i in range(0, len(item)): item[i].click() time.sleep(1) windows = driver.window_handles driver.switch_to.window(windows[1]) try: #element语句判断页面某元素是否加载完成 element = WebDriverWait(driver, 40).until( EC.presence_of_element_located((By.CLASS_NAME, "table-container-title"))) #获取信息 Row1.append("编号") Row1.append("专利名称") Row2.append(i) name = driver.find_element_by_xpath( '//div[@class="table-container-title"]').text Row2.append(name) rowCount = len( driver.find_elements_by_xpath( '//div[@class="table-container"]/table/tbody/tr')) for n in range(1, rowCount): row1 = (driver.find_element_by_xpath( '//div[@class="table-container"]/table/tbody/tr[%s]/td[1]' % (n)).text) row2 = (driver.find_element_by_xpath( '//div[@class="table-container"]/table/tbody/tr[%s]/td[2]' % (n)).text) Row1.append(row1) Row2.append(row2) Row1.append("摘要") zhaiyao = driver.find_element_by_xpath('//*[@class="content"]').text Row2.append(zhaiyao) Rw1 = pd.Series(Row1) Rw2 = pd.Series(Row2) total = pd.DataFrame(&#123;"属性": Rw1, "值": Rw2&#125;) finally: driver.close() print(name) driver.switch_to.window(windows[0]) time.sleep(1) 1total.to_csv('test_专利.csv',index=True,mode='w',encoding="utf-8") 爬取详览内容1234567891011121314151617181920windows = driver.window_handlesdriver.switch_to.window(windows[1])rowCount = len( driver.find_elements_by_xpath( '//div[@class="table-container"]/table/tbody/tr'))Row1 = []Row2 = []for i in range(1, rowCount): row1 = (driver.find_element_by_xpath( '//div[@class="table-container"]/table/tbody/tr[%s]/td[1]' % (i)).text) row2 = (driver.find_element_by_xpath( '//div[@class="table-container"]/table/tbody/tr[%s]/td[2]' % (i)).text) Row1.append(row1) Row2.append(row2)Row1.append("摘要")zhaiyao = driver.find_element_by_xpath('//*[@class="content"]').textRow2.append(zhaiyao)Rw1 = pd.Series(Row1)Rw2 = pd.Series(Row2)total = pd.DataFrame(&#123;"属性":Rw1,"值":Rw2&#125;) 翻页123#手动翻页driver.find_element_by_link_text('下一页').click()print("请重复1，2步操作") 详览信息获取123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263for l in range(1, 10): windows = driver.window_handles driver.switch_to.window(windows[0]) select_status = status.get_attribute('class') if 'select' in select_status: driver.find_element_by_xpath('//a[@mode="TABLE_MODE"]').click() print("列表式") else: driver.find_element_by_xpath('//a[@mode="SEARCH_MODE"]').click() print('搜索式') #获取结果列表 wait = WebDriverWait(driver, 40) button = wait.until( EC.element_to_be_clickable((By.XPATH, '//a[@role="detail"]'))) item = driver.find_elements_by_xpath('//a[@role="detail"]') print(len(item)) Row1 = [] Row2 = [] for i in range(0, len(item)): item[i].click() time.sleep(1) windows = driver.window_handles driver.switch_to.window(windows[1]) try: #element语句判断页面某元素是否加载完成 element = WebDriverWait(driver, 40).until( EC.presence_of_element_located((By.CLASS_NAME, "table-container-title"))) #获取信息 Row1.append("编号") Row1.append("专利名称") Row2.append(i) name = driver.find_element_by_xpath( '//div[@class="table-container-title"]').text Row2.append(name) rowCount = len( driver.find_elements_by_xpath( '//div[@class="table-container"]/table/tbody/tr')) for n in range(1, rowCount): row1 = (driver.find_element_by_xpath( '//div[@class="table-container"]/table/tbody/tr[%s]/td[1]' % (n)).text) row2 = (driver.find_element_by_xpath( '//div[@class="table-container"]/table/tbody/tr[%s]/td[2]' % (n)).text) Row1.append(row1) Row2.append(row2) Row1.append("摘要") zhaiyao = driver.find_element_by_xpath( '//*[@class="content"]').text Row2.append(zhaiyao) Rw1 = pd.Series(Row1) Rw2 = pd.Series(Row2) total = pd.DataFrame(&#123;"属性": Rw1, "值": Rw2&#125;) total.to_csv('test_for_10.csv', index=True) finally: driver.close() print(name) driver.switch_to.window(windows[0]) time.sleep(1) print("第" + str(l) + "页") driver.find_element_by_link_text('下一页').click() time.sleep(20) 1234567891011121314151617搜索式12发明名称 --- 一种提高免疫力的营养保健饮料发明名称 --- 一种健脾养元的食品组合物及其制备方法发明名称 --- 提升人体新陈代谢进行减肥的药食同源食品及制备方法发明名称 --- 药膳羊肚及其制备方法发明名称 --- 一种具有温肾助阳功效的药食同源组合物及其制备方法发明名称 --- 一种美肌嫩肤蜂王浆组合物发明名称 --- 一种菜用黄麻泡菜茶及其制备方法发明名称 --- 一种具有提神抗疲劳功效的蜂王浆组合物发明名称 --- 一种含有乌梅的组合物及其制备方法和用途发明名称 --- 一种降脂减肥的固体饮品及其制备方法发明名称 --- 一种缓解体力疲劳的洋参阿胶糕制备方法发明名称 --- 一种适合三高人群的玉谷康营养早餐及其制备方法第1页列表式12 详览其二1item [&lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-211&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-212&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-213&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-214&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-215&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-216&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-217&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-218&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-219&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-220&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-221&quot;)&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (session=&quot;ead56071ee2fe51b7a5fe3963e39963f&quot;, element=&quot;0.15422172092949826-222&quot;)&gt;]]]></content>
      <categories>
        <category>博客</category>
        <category>Code</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>新手入门</tag>
        <tag>爬虫</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhm773%2F4a17b156.html</url>
    <content type="text"><![CDATA[该文章是加密文章，请输入密码访问： Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>新手入门</tag>
      </tags>
  </entry>
</search>
